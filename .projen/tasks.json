{
  "tasks": {
    "clobber": {
      "name": "clobber",
      "category": "30.maintain",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "category": "00.build",
      "description": "Only compile",
      "steps": [
        {
          "exec": "tsc"
        }
      ]
    },
    "test:compile": {
      "name": "test:compile",
      "category": "10.test",
      "description": "compiles the test code"
    },
    "test": {
      "name": "test",
      "category": "10.test",
      "description": "Run tests",
      "steps": [
        {
          "spawn": "test:compile"
        }
      ]
    },
    "build": {
      "name": "build",
      "category": "00.build",
      "description": "Creates an optimized production build of your Next.js application",
      "steps": [
        {
          "exec": "next build"
        }
      ]
    },
    "bump": {
      "name": "bump",
      "category": "20.release",
      "description": "Commits a bump to the package version based on conventional commits",
      "steps": [
        {
          "exec": "standard-version"
        }
      ],
      "condition": "! git log --oneline -1 | grep -q \"chore(release):\""
    },
    "release": {
      "name": "release",
      "category": "20.release",
      "description": "Bumps version & push to main",
      "steps": [
        {
          "spawn": "bump"
        },
        {
          "exec": "git push --follow-tags origin main"
        }
      ],
      "condition": "! git log --oneline -1 | grep -q \"chore(release):\""
    },
    "projen:upgrade": {
      "name": "projen:upgrade",
      "category": "30.maintain",
      "description": "upgrades projen to the latest version",
      "steps": [
        {
          "exec": "yarn upgrade -L projen"
        },
        {
          "exec": "CI=\"\" yarn projen"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "category": "00.build",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc -w"
        }
      ]
    },
    "dev": {
      "name": "dev",
      "category": "00.build",
      "description": "Starts the Next.js application in development mode",
      "steps": [
        {
          "exec": "next dev"
        }
      ]
    },
    "server": {
      "name": "server",
      "category": "20.release",
      "description": "Starts the Next.js application in production mode",
      "steps": [
        {
          "exec": "next start"
        }
      ]
    },
    "telemetry": {
      "name": "telemetry",
      "category": "99.misc",
      "description": "Checks the status of Next.js telemetry collection",
      "steps": [
        {
          "exec": "next telemetry"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node -e \\\"console.log(process.env.PATH)\\\"\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
